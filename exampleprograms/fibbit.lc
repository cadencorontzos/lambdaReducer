succ        = fn n => fn f => fn x => f (n f x);
zero        = (fn f => fn x => x);
one         = succ zero;
two         = succ one;
three       = succ two;
four        = succ three;
five        = succ four;
ten         = succ (succ (succ (succ (succ five))));
true        = fn f => fn s => f;
false       = fn f => fn s => s;
pair        = fn l => fn r => fn s => s l r;
fst         = fn p => p true;
snd         = fn p => p false;
plus        = fn n => fn m => (n succ m);
fibExtract  = fn p => fst p;
fibStart    = pair zero one;
fibIterator = fn p => pair (snd p) (plus (fst p) (snd p));
fibbit      = fn n => (fibExtract (n fibIterator fibStart));
main        = fibbit zero;